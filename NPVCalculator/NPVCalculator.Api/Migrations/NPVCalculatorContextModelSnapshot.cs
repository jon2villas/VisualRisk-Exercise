// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NPVCalculator.Api.Contexts;

namespace NPVCalculator.Api.Migrations
{
    [DbContext(typeof(NPVCalculatorContext))]
    partial class NPVCalculatorContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("NPVCalculator.Api.Models.Calculation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("DiscountRate");

                    b.Property<decimal>("NetPresentValue");

                    b.Property<long>("ParameterId");

                    b.HasKey("Id");

                    b.HasIndex("ParameterId");

                    b.ToTable("Calculations");
                });

            modelBuilder.Entity("NPVCalculator.Api.Models.CashFlow", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ParameterId");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ParameterId");

                    b.ToTable("CashFlows");
                });

            modelBuilder.Entity("NPVCalculator.Api.Models.Parameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("DiscountRateIncrement");

                    b.Property<decimal>("InitialValue");

                    b.Property<double>("LowerBoundDiscountRate");

                    b.Property<double>("UpperBoundDiscountRate");

                    b.HasKey("Id");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("NPVCalculator.Api.Models.Calculation", b =>
                {
                    b.HasOne("NPVCalculator.Api.Models.Parameter", "Parameter")
                        .WithMany()
                        .HasForeignKey("ParameterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NPVCalculator.Api.Models.CashFlow", b =>
                {
                    b.HasOne("NPVCalculator.Api.Models.Parameter", "Parameter")
                        .WithMany("CashFlows")
                        .HasForeignKey("ParameterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
